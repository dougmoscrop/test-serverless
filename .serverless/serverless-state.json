{
  "service": {
    "service": "issue-8076",
    "serviceObject": {
      "name": "issue-8076"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([^{}]+?)}",
      "name": "aws",
      "runtime": "python3.8",
      "region": "us-east-1",
      "stackName": "dev-issue-8076",
      "stackTags": {
        "LinkedApp": "api-company",
        "CreationMode": "auto"
      },
      "cfnRole": "foo",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "FunctionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/dev-issue-8076-pre-sign-up"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "issue-8076",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/dev-issue-8076-pre-sign-up:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/dev-issue-8076-pre-sign-up:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "issue-8076",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "EnterpriseLogAccessIamRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "AWS": "arn:aws:iam::802587217904:root"
                    },
                    "Action": "sts:AssumeRole",
                    "Condition": {
                      "StringEquals": {
                        "sts:ExternalId": "ServerlessEnterprise-1sJrygBdcH5mNKPSp8"
                      }
                    }
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "LogFilterAccess",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:FilterLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "FunctionLogGroup",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "FunctionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/issue-8076/dev/1597765446446-2020-08-18T15:44:06.446Z/function.zip"
              },
              "FunctionName": "dev-issue-8076-pre-sign-up",
              "Handler": "s_function.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "python3.8",
              "Timeout": 6,
              "Description": "Cognito Pre SignUp Trigger to link Connect with Google account to existing Cognito User",
              "Tags": [
                {
                  "Key": "LinkedApp",
                  "Value": "api-company"
                },
                {
                  "Key": "CreationMode",
                  "Value": "auto"
                },
                {
                  "Key": "Stage",
                  "Value": "dev"
                }
              ],
              "Environment": {
                "Variables": {
                  "STAGE": "dev"
                }
              }
            },
            "DependsOn": [
              "FunctionLogGroup"
            ]
          },
          "FunctionLambdaVersionyYyW8lTUGxRy5kNGzkH7E5IugrlgJbKqCM5Q6cLw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "FunctionLambdaFunction"
              },
              "CodeSha256": "3+bFzejlirNPX3FZdRHP3qeksYB5gzsB86jyWeAJ+Oc=",
              "Description": "Cognito Pre SignUp Trigger to link Connect with Google account to existing Cognito User"
            }
          },
          "FunctionCustomCognitoUserPool1": {
            "Type": "Custom::CognitoUserPool",
            "Version": 1,
            "DependsOn": [
              "FunctionLambdaFunction",
              "CustomDashresourceDashexistingDashcupLambdaFunction"
            ],
            "Properties": {
              "ServiceToken": {
                "Fn::GetAtt": [
                  "CustomDashresourceDashexistingDashcupLambdaFunction",
                  "Arn"
                ]
              },
              "FunctionName": "dev-issue-8076-pre-sign-up",
              "UserPoolName": "test-pool",
              "UserPoolConfigs": [
                {
                  "Trigger": "PreSignUp"
                }
              ]
            }
          },
          "CustomDashresourceDashexistingDashcupLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/issue-8076/dev/1597765446446-2020-08-18T15:44:06.446Z/custom-resources.zip"
              },
              "FunctionName": "issue-8076-dev-custom-resource-existing-cup",
              "Handler": "cognitoUserPool/handler.handler",
              "MemorySize": 1024,
              "Runtime": "nodejs12.x",
              "Timeout": 180,
              "Role": "foo"
            },
            "DependsOn": []
          },
          "CloudWatchLogsSubscriptionFilterFunctionLogGroup": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:1sJrygBdcH5mNKPSp8#GjXh77HjWzffv8X5SQ#issue-8076#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "FunctionLogGroup"
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "EnterpriseLogAccessIamRole": {
            "Value": {
              "Fn::GetAtt": [
                "EnterpriseLogAccessIamRole",
                "Arn"
              ]
            }
          },
          "FunctionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "FunctionLambdaVersionyYyW8lTUGxRy5kNGzkH7E5IugrlgJbKqCM5Q6cLw"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "safeguards": [
        {
          "title": "No \"*\" in IAM Role statements",
          "safeguard": "no-wild-iam-role-statements",
          "description": "This policy performs a simple check to prevent \"*\" permissions being used in AWS IAM Roles by checking for wildcards on Actions and Resources in grant statements.\n",
          "enforcementLevel": "warning"
        },
        {
          "title": "Forbid S3 HTTP Access",
          "safeguard": "forbid-s3-http-access",
          "description": "This policy requires that you have a BucketPolicy forbidding access over HTTP for each bucket.\n",
          "enforcementLevel": "warning"
        },
        {
          "title": "Framework Version",
          "safeguard": "framework-version",
          "description": "This policy limits which versions of the Serverless Framework can be used.\n",
          "enforcementLevel": "warning",
          "config": ">=1.78.0"
        },
        {
          "title": "Require Cloudformation Deployment Role",
          "safeguard": "require-cfn-role",
          "description": "This rule requires you to specify the cfnRole option\n",
          "enforcementLevel": "warning"
        },
        {
          "title": "Require Description",
          "safeguard": "require-description",
          "description": "This rule requires that all functions have a description of minimum or maximum length.\n",
          "enforcementLevel": "warning"
        },
        {
          "title": "Required stack tags",
          "safeguard": "required-stack-tags",
          "enforcementLevel": "warning",
          "description": "This rule requires you to specify certain tags in the stackTags option.\n",
          "config": {
            "LinkedApp": ".*-company",
            "CreationMode": "auto"
          }
        },
        {
          "title": "Restrict regions",
          "safeguard": "allowed-regions",
          "description": "This rule restrict the regions to which a service may be deployed.\n",
          "enforcementLevel": "error",
          "config": [
            "us-east-1"
          ]
        },
        {
          "title": "Allowed stages",
          "safeguard": "allowed-stages",
          "description": "This limits the stages that can be used in services.\n",
          "enforcementLevel": "error",
          "config": [
            "dev",
            "staging",
            "prod"
          ]
        }
      ]
    },
    "plugins": [
      "@serverless/safeguards-plugin"
    ],
    "pluginsData": {},
    "functions": {
      "function": {
        "handler": "s_function.handler",
        "name": "dev-issue-8076-pre-sign-up",
        "description": "Cognito Pre SignUp Trigger to link Connect with Google account to existing Cognito User",
        "environment": {
          "STAGE": "dev"
        },
        "tags": {
          "LinkedApp": "api-company",
          "CreationMode": "auto",
          "Stage": "dev"
        },
        "events": [
          {
            "cognitoUserPool": {
              "pool": "test-pool",
              "trigger": "PreSignUp",
              "existing": true
            }
          }
        ],
        "package": {
          "include": [
            "s_function.py",
            "serverless_sdk/**"
          ],
          "artifact": "/Users/medikoo/Projects/test-serverless/.serverless/function.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "FunctionLambdaVersionyYyW8lTUGxRy5kNGzkH7E5IugrlgJbKqCM5Q6cLw"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "app": "medikoo-test",
    "org": "medikoo",
    "layers": {},
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "org": "medikoo",
      "app": "medikoo-test",
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "package": {
        "individually": true,
        "exclude": [
          "/**"
        ],
        "artifactDirectoryName": "serverless/issue-8076/dev/1597765446446-2020-08-18T15:44:06.446Z"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "layers": {
        "$ref": "$[\"service\"][\"layers\"]"
      },
      "configValidationMode": "warn"
    },
    "isDashboardMonitoringPreconfigured": true,
    "isDashboardAppPreconfigured": true,
    "appUid": "GjXh77HjWzffv8X5SQ",
    "orgUid": "1sJrygBdcH5mNKPSp8"
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/issue-8076/dev/1597765446446-2020-08-18T15:44:06.446Z",
    "artifact": ""
  }
}