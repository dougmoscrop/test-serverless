{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "The AWS CloudFormation template for this Serverless application",
	"Resources": {
		"ServerlessDeploymentBucket": {
			"Type": "AWS::S3::Bucket",
			"Properties": {
				"BucketEncryption": {
					"ServerSideEncryptionConfiguration": [
						{
							"ServerSideEncryptionByDefault": {
								"SSEAlgorithm": "AES256"
							}
						}
					]
				}
			}
		},
		"ServerlessDeploymentBucketPolicy": {
			"Type": "AWS::S3::BucketPolicy",
			"Properties": {
				"Bucket": {
					"Ref": "ServerlessDeploymentBucket"
				},
				"PolicyDocument": {
					"Statement": [
						{
							"Action": "s3:*",
							"Effect": "Deny",
							"Principal": "*",
							"Resource": [
								{
									"Fn::Join": [
										"",
										[
											"arn:",
											{
												"Ref": "AWS::Partition"
											},
											":s3:::",
											{
												"Ref": "ServerlessDeploymentBucket"
											},
											"/*"
										]
									]
								}
							],
							"Condition": {
								"Bool": {
									"aws:SecureTransport": false
								}
							}
						}
					]
				}
			}
		},
		"FunctionLogGroup": {
			"Type": "AWS::Logs::LogGroup",
			"Properties": {
				"LogGroupName": "/aws/lambda/test-custom-provider-dev-function"
			}
		},
		"IamRoleLambdaExecution": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": {
								"Service": ["lambda.amazonaws.com"]
							},
							"Action": ["sts:AssumeRole"]
						}
					]
				},
				"Policies": [
					{
						"PolicyName": {
							"Fn::Join": ["-", ["test-custom-provider", "dev", "lambda"]]
						},
						"PolicyDocument": {
							"Version": "2012-10-17",
							"Statement": [
								{
									"Effect": "Allow",
									"Action": ["logs:CreateLogStream", "logs:CreateLogGroup"],
									"Resource": [
										{
											"Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/test-custom-provider-dev*:*"
										}
									]
								},
								{
									"Effect": "Allow",
									"Action": ["logs:PutLogEvents"],
									"Resource": [
										{
											"Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/test-custom-provider-dev*:*:*"
										}
									]
								}
							]
						}
					}
				],
				"Path": "/",
				"RoleName": {
					"Fn::Join": [
						"-",
						[
							"test-custom-provider",
							"dev",
							{
								"Ref": "AWS::Region"
							},
							"lambdaRole"
						]
					]
				}
			}
		},
		"FunctionLambdaFunction": {
			"Type": "AWS::Lambda::Function",
			"Properties": {
				"Code": {
					"S3Bucket": {
						"Ref": "ServerlessDeploymentBucket"
					},
					"S3Key": "serverless/test-custom-provider/dev/1592811115406-2020-06-22T07:31:55.406Z/function.zip"
				},
				"FunctionName": "test-custom-provider-dev-function",
				"Handler": "index.handler",
				"MemorySize": 1024,
				"Role": {
					"Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"]
				},
				"Runtime": "nodejs12.x",
				"Timeout": 6
			},
			"DependsOn": ["FunctionLogGroup"]
		},
		"FunctionLambdaVersionrPKKrSUnKh7n70awl4SVsRFJvFQl31aumWKkIrl59ME": {
			"Type": "AWS::Lambda::Version",
			"DeletionPolicy": "Retain",
			"Properties": {
				"FunctionName": {
					"Ref": "FunctionLambdaFunction"
				},
				"CodeSha256": "Sb8ixaQjka7kO0ypSfBwyCxRGhJz3Lkn4NLmbozErYU="
			}
		},
		"ApiGatewayRestApi": {
			"Type": "AWS::ApiGateway::RestApi",
			"Properties": {
				"Name": "dev-test-custom-provider",
				"EndpointConfiguration": {
					"Types": ["EDGE"]
				},
				"Policy": ""
			}
		},
		"ApiGatewayResourceBar": {
			"Type": "AWS::ApiGateway::Resource",
			"Properties": {
				"ParentId": {
					"Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"]
				},
				"PathPart": "bar",
				"RestApiId": {
					"Ref": "ApiGatewayRestApi"
				}
			}
		},
		"ApiGatewayMethodBarGet": {
			"Type": "AWS::ApiGateway::Method",
			"Properties": {
				"HttpMethod": "GET",
				"RequestParameters": {},
				"ResourceId": {
					"Ref": "ApiGatewayResourceBar"
				},
				"RestApiId": {
					"Ref": "ApiGatewayRestApi"
				},
				"ApiKeyRequired": false,
				"AuthorizationType": "NONE",
				"Integration": {
					"IntegrationHttpMethod": "POST",
					"Type": "AWS_PROXY",
					"Uri": {
						"Fn::Join": [
							"",
							[
								"arn:",
								{
									"Ref": "AWS::Partition"
								},
								":apigateway:",
								{
									"Ref": "AWS::Region"
								},
								":lambda:path/2015-03-31/functions/",
								{
									"Fn::GetAtt": ["FunctionLambdaFunction", "Arn"]
								},
								"/invocations"
							]
						]
					}
				},
				"MethodResponses": []
			}
		},
		"ApiGatewayDeployment1592811114605": {
			"Type": "AWS::ApiGateway::Deployment",
			"Properties": {
				"RestApiId": {
					"Ref": "ApiGatewayRestApi"
				},
				"StageName": "dev"
			},
			"DependsOn": ["ApiGatewayMethodBarGet"]
		},
		"FunctionLambdaPermissionApiGateway": {
			"Type": "AWS::Lambda::Permission",
			"Properties": {
				"FunctionName": {
					"Fn::GetAtt": ["FunctionLambdaFunction", "Arn"]
				},
				"Action": "lambda:InvokeFunction",
				"Principal": "apigateway.amazonaws.com",
				"SourceArn": {
					"Fn::Join": [
						"",
						[
							"arn:",
							{
								"Ref": "AWS::Partition"
							},
							":execute-api:",
							{
								"Ref": "AWS::Region"
							},
							":",
							{
								"Ref": "AWS::AccountId"
							},
							":",
							{
								"Ref": "ApiGatewayRestApi"
							},
							"/*/*"
						]
					]
				}
			}
		}
	},
	"Outputs": {
		"ServerlessDeploymentBucketName": {
			"Value": {
				"Ref": "ServerlessDeploymentBucket"
			}
		},
		"FunctionLambdaFunctionQualifiedArn": {
			"Description": "Current Lambda function version",
			"Value": {
				"Ref": "FunctionLambdaVersionrPKKrSUnKh7n70awl4SVsRFJvFQl31aumWKkIrl59ME"
			}
		},
		"ServiceEndpoint": {
			"Description": "URL of the service endpoint",
			"Value": {
				"Fn::Join": [
					"",
					[
						"https://",
						{
							"Ref": "ApiGatewayRestApi"
						},
						".execute-api.",
						{
							"Ref": "AWS::Region"
						},
						".",
						{
							"Ref": "AWS::URLSuffix"
						},
						"/dev"
					]
				]
			}
		}
	}
}
